/home/bruno-vignoli/Documents/GitHub/Monster8/Games/ASWAIW/ASWAIW.binm8
1
1
0
0
/home/bruno-vignoli/Documents/GitHub/Monster8/Games/ASWAIW/Medias/Player.png
0
2048
64
32
2
0
1024
32
32
1024
1024
32
32
/home/bruno-vignoli/Documents/GitHub/Monster8/Games/ASWAIW/Medias/Tileset.png
0
16384
128
128
64
0
256
16
16
256
256
16
16
512
256
16
16
768
256
16
16
1024
256
16
16
1280
256
16
16
1536
256
16
16
1792
256
16
16
2048
256
16
16
2304
256
16
16
2560
256
16
16
2816
256
16
16
3072
256
16
16
3328
256
16
16
3584
256
16
16
3840
256
16
16
4096
256
16
16
4352
256
16
16
4608
256
16
16
4864
256
16
16
5120
256
16
16
5376
256
16
16
5632
256
16
16
5888
256
16
16
6144
256
16
16
6400
256
16
16
6656
256
16
16
6912
256
16
16
7168
256
16
16
7424
256
16
16
7680
256
16
16
7936
256
16
16
8192
256
16
16
8448
256
16
16
8704
256
16
16
8960
256
16
16
9216
256
16
16
9472
256
16
16
9728
256
16
16
9984
256
16
16
10240
256
16
16
10496
256
16
16
10752
256
16
16
11008
256
16
16
11264
256
16
16
11520
256
16
16
11776
256
16
16
12032
256
16
16
12288
256
16
16
12544
256
16
16
12800
256
16
16
13056
256
16
16
13312
256
16
16
13568
256
16
16
13824
256
16
16
14080
256
16
16
14336
256
16
16
14592
256
16
16
14848
256
16
16
15104
256
16
16
15360
256
16
16
15616
256
16
16
15872
256
16
16
16128
256
16
16
0
0
; ==========================
; And Space Was Again In War
;
; (c) 2025 Bruno Vignoli
; ==========================

; ====================
; start of the program
; ====================
start:
call InitializeGame

; =========
; main loop
; =========
MainLoop:
call RestoreBackgrounds
call AnimatePlayer
call MovePlayer
call ScrollDown
call RedrawSprites
flip
call SlowDown
jp MainLoop

; ==========
; initialize
; ==========
InitializeGame:
paper 0
pen 255
border 0
cls

; position the player
ld a1,144
call SetPX
ld a1,164
call SetPY

; set the scrolling value
ld a1,0xfffffe70
call SetScrolling

; set current map
ld a0,map1 ; map address in memory
ld d0,map1_width ; full map size
ld d1,map1_height
setmap

; set current tileset
ld a0,0x000000 ; tileset in tilesets memory
ld d0,16 ; tile size
ld d1,16
settileset

; set current window for the map
ld d0,0 ; coordinates to draw
ld d1,0
ld d2,20 ; width & height to draw
ld d3,25
setwindow

; draw the map's window at coordinates
call GetScrolling
push a0
pop a1
ld a0,0
drawmap

; redraw all sprites for the first time
call RedrawSprites
ret

; =================
; set 32 bits value
; =================
; a0: address
; a1: value
; =================
Set32:
push a1
pop d0-d3
ld [a0],d0
push a0
pop a1
inc a1
ld [a1],d1
push a1
pop a2
inc a2
ld [a2],d2
push a2
pop a3
inc a3
ld [a3],d3
ret

; =================
; get 32 bits value
; =================
; a0: address
; out: a0: value
; =================
Get32:
ld d0,[a0]
push a0
pop a1
inc a1
ld d1,[a1]
push a1
pop a2
inc a2
ld d2,[a2]
push a2
pop a3
inc a3
ld d3,[a3]
push d0-d3
pop a0
ret

; ==========================
; set the vertical scrolling
; ==========================
SetScrolling:
ld a0,scrolly
call Set32
ret

; ==========================
; get the vertical scrolling
; ==========================
GetScrolling:
ld a0,scrolly
call Get32
ret

; ============
; get px in a1
; ============
GetPX:
push a0
ld a0,px
call Get32
push a0
pop a1
pop a0
ret

; ============
; get py in a1
; ============
GetPY:
push a0
ld a0,py
call Get32
push a0
pop a1
pop a0
ret

; ============
; set px in a1
; ============
SetPX:
ld a0,px
call Set32
ret

; ============
; set py in a1
; ============
SetPY:
ld a0,py
call Set32
ret

; ===============
; move the player
; ===============
MovePlayer:
getjoystick  ; get joystick input in D0
ld d1,0x04 ; left joystick value
and d1
cp d1
jp nz,MPNotMoveLeft

; move left
call GetPX
dec a1
call SetPX
call LimitPXLeft

MPNotMoveLeft:

getjoystick  ; get joystick input in D0
ld d1,0x08 ; right joystick value
and d1
cp d1
jp nz,MPNotMoveRight

; move right
call GetPX
inc a1
call SetPX
call LimitPXRight

MPNotMoveRight:
ret

; ========================
; limit player's movements
; ========================
LimitPXLeft:
call GetPX
push a1
pop a0
cp a0,1
ret nc
ld a1,1
call SetPX
ret

LimitPXRight:
call GetPX
push a1
pop a0
cp a0,287
ret c
ld a1,287
call SetPX
ret

; =========================
; store player's background
; =========================
StorePlayerBG:
call GetPX
push a1
call GetPY
pop a0
ld d0,32
ld d1,32
ld a2,pbg
grab ; grab background at a0,a1, d0,d1, a2
ret

; ===========
; draw player
; ===========
DrawPlayer:
ld d0,0
ld d1,0
ld d2,0
ld a3,pframe
ld d3,[a3]
push d0-d3
pop a0 ; a0 contient le num√©ro de frame (0 ou 1)
ld a1,0x400
mult a0,a1
push a0
call GetPX
push a1
call GetPY
pop a0
ld d0,32
ld d1,32
pop a2
sprite ; draw sprite at a0,a1, d0,d1, a2
ret

; ===========================
; restore player's background
; ===========================
RestorePlayerBG:
call GetPX
push a1
call GetPY
pop a0
ld d0,32
ld d1,32
ld a2,pbg
block ; draw background block at a0,a1, d0,d1, a2
ret

; ==================================
; restore background for all sprites
; ==================================
RestoreBackgrounds:
call RestorePlayerBG
ret

; ==================================================
; redraw all sprites, grabing their background first
; ==================================================
RedrawSprites:
call StorePlayerBG
call DrawPlayer
ret

; ==============
; animate player
; ==============
AnimatePlayer:
ld a0,pframe
ld d0,[a0]
cp 1
jp z,APLoop
inc d0
jp APEnd
APLoop:
ld d0,0
APEnd:
ld [a0],d0
ret

; ==========================
; scroll down the background
; ==========================
ScrollDown:
ld a0,scrollframe
ld d0,[a0]
inc d0
ld [a0],d0
cp 8 ; value to change for scrolling speed
ret c
ld d0,0
ld [a0],d0
call GetScrolling
inc a0
push a0
pop a1
call SetScrolling
ld a0,scrolly
call Get32 ; get scrolling in a0
push a0
pop a1
ld a0,0
drawmap
ret

; =================
; slowdown the game
; =================
SlowDown:
ld a0,0x1000
SD_Loop:
dec a0
push a0
pop d0-d3
add d1
add d2
add d3
cp 0
ret z
jp SD_Loop

; ====
; data
; ====
px: dl 0
py: dl 0

; frame animation for the player
pframe: db 0

; scrolling value
scrolly: dl 0

; slowdown the scrolling
scrollframe: db 0

; player's background
pbg: ds 1024,0

; test map 1
map1_width: db 20
map1_height: db 25
map1:
db 1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3
db 9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11
db 9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11
db 9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11
db 9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11
db 9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11
db 9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11
db 9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11
db 9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11
db 9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11
db 9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11
db 9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11
db 9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11
db 9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11
db 9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11
db 9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11
db 9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11
db 9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11
db 9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11
db 9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11
db 9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11
db 9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11
db 9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11
db 9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11
db 17,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,19
